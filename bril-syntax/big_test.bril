main {
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;


  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;

  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;
      jmp b2;

  b1:
    works_ok : int = const 42;
    jmp b0;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or
    br a b c;
  br x y z;
  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;

  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;

  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
  x: int = const 42;
  x: int = id x;
  x: int = add x x;

  x: int = mul x x;
  x: int = sub x x;
  x: int = div x x;
  x: int = eq x x;
  x: int = lt x x;
  x: int = gt x x;
  x: int = le x x;
  x: int = ge  x x;
  x: int = not x x;
  x: int = and x x;
  x: int = or x x;
  bril : int = 3;
  b : bool = const true;
  b : bool = const false;
  jmp x;
  br b b1 b2;

  alpha_num_name1 : int = id x;
  print x;   
  nop;
  ret x;
  x : int = 3;
  b0: same_line_works : int = const 42;

  b1:
    works_ok : int = const 42;

  b2:
    jmp
    br
    const
    id
    add
    mul
    sub
    div
    eq
    lt
    gt
    le
    not
    and
    or

  x : int =
  const 4;
}

